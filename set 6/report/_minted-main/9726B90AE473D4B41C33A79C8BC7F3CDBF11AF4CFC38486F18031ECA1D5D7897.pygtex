\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}ifndef INCLUDED\PYGZus{}CPU\PYGZus{}}
\PYG{c+cp}{\PYGZsh{}define INCLUDED\PYGZus{}CPU\PYGZus{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}../tokenizer/tokenizer.h\PYGZdq{}}

\PYG{k}{class} \PYG{n+nc}{Memory}\PYG{p}{;}

\PYG{k}{class} \PYG{n+nc}{CPU}
\PYG{p}{\PYGZob{}}
    \PYG{k}{enum}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{NREGISTERS} \PYG{o}{=} \PYG{l+m+mi}{5}\PYG{p}{,}                                               \PYG{c+c1}{// a..e at indices 0..4, respectively}
        \PYG{n}{LAST\PYGZus{}REGISTER} \PYG{o}{=} \PYG{n}{NREGISTERS} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}
    \PYG{p}{\PYGZcb{};}

    \PYG{k}{struct} \PYG{n}{Operand}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{OperandType} \PYG{n}{type}\PYG{p}{;}
        \PYG{k+kt}{int} \PYG{n}{value}\PYG{p}{;}
    \PYG{p}{\PYGZcb{};}

    \PYG{n}{Memory} \PYG{o}{\PYGZam{}}\PYG{n}{d\PYGZus{}memory}\PYG{p}{;}
    \PYG{n}{Tokenizer} \PYG{n}{d\PYGZus{}tokenizer}\PYG{p}{;}

    \PYG{k+kt}{int} \PYG{n}{d\PYGZus{}register}\PYG{p}{[}\PYG{n}{NREGISTERS}\PYG{p}{];}

    \PYG{k}{public}\PYG{o}{:}
        \PYG{n}{CPU}\PYG{p}{(}\PYG{n}{Memory} \PYG{o}{\PYGZam{}}\PYG{n}{memory}\PYG{p}{);}
        \PYG{k+kt}{void} \PYG{n+nf}{start}\PYG{p}{();}

    \PYG{k}{private}\PYG{o}{:}
        \PYG{k+kt}{bool} \PYG{n}{error}\PYG{p}{();}                                                 \PYG{c+c1}{// show \PYGZsq{}syntax error\PYGZsq{}, and prepare for the}
                                                                      \PYG{c+c1}{// next input line}
                                                                      \PYG{c+c1}{// return a value or a register\PYGZsq{}s or}
                                                                      \PYG{c+c1}{// memory location\PYGZsq{}s value}
        \PYG{k+kt}{int} \PYG{n+nf}{dereference}\PYG{p}{(}\PYG{n}{Operand} \PYG{k}{const} \PYG{o}{\PYGZam{}}\PYG{n}{value}\PYG{p}{);}

        \PYG{k+kt}{bool} \PYG{n+nf}{rvalue}\PYG{p}{(}\PYG{n}{Operand} \PYG{o}{\PYGZam{}}\PYG{n}{lhs}\PYG{p}{);}                                    \PYG{c+c1}{// retrieve an rvalue operand}
        \PYG{k+kt}{bool} \PYG{n+nf}{lvalue}\PYG{p}{(}\PYG{n}{Operand} \PYG{o}{\PYGZam{}}\PYG{n}{lhs}\PYG{p}{);}                                    \PYG{c+c1}{// retrieve an lvalue operand}

                                                                      \PYG{c+c1}{// determine 2 operands, lhs must be an lvalue}
        \PYG{k+kt}{bool} \PYG{n+nf}{operands}\PYG{p}{(}\PYG{n}{Operand} \PYG{o}{\PYGZam{}}\PYG{n}{lhs}\PYG{p}{,} \PYG{n}{Operand} \PYG{o}{\PYGZam{}}\PYG{n}{rhs}\PYG{p}{);}

        \PYG{k+kt}{bool} \PYG{n+nf}{twoOperands}\PYG{p}{(}\PYG{n}{Operand} \PYG{o}{\PYGZam{}}\PYG{n}{lhs}\PYG{p}{,} \PYG{k+kt}{int} \PYG{o}{\PYGZam{}}\PYG{n}{lhsValue}\PYG{p}{,} \PYG{k+kt}{int} \PYG{o}{\PYGZam{}}\PYG{n}{rhsValue}\PYG{p}{);}

                                                                      \PYG{c+c1}{// store a value in register or memory}
        \PYG{k+kt}{void} \PYG{n+nf}{store}\PYG{p}{(}\PYG{n}{Operand} \PYG{k}{const} \PYG{o}{\PYGZam{}}\PYG{n}{lhs}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{value}\PYG{p}{);}
        \PYG{k+kt}{void} \PYG{n+nf}{mov}\PYG{p}{();}                                                   \PYG{c+c1}{// assign a value}
        \PYG{k+kt}{void} \PYG{n+nf}{add}\PYG{p}{();}                                                   \PYG{c+c1}{// add values}
        \PYG{k+kt}{void} \PYG{n+nf}{sub}\PYG{p}{();}                                                   \PYG{c+c1}{// subtract values}
        \PYG{k+kt}{void} \PYG{n+nf}{mul}\PYG{p}{();}                                                   \PYG{c+c1}{// multiply values}
        \PYG{k+kt}{void} \PYG{n+nf}{div}\PYG{p}{();}                                                   \PYG{c+c1}{// divide values (remainder: last reg.)}
                                                                      \PYG{c+c1}{// div a b computes a /= b, last reg: \PYGZpc{}}
        \PYG{k+kt}{void} \PYG{n+nf}{neg}\PYG{p}{();}                                                   \PYG{c+c1}{// negate a value}
        \PYG{k+kt}{void} \PYG{n+nf}{dsp}\PYG{p}{();}                                                   \PYG{c+c1}{// display a value}
\PYG{p}{\PYGZcb{};}

\PYG{c+cp}{\PYGZsh{}endif}
\end{Verbatim}
