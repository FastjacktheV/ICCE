If the program is run using ./main the following is returned

-------------------------------------------------------------------------------
Example 1: return object
-------------------------------------------------------------------------------
Trying
	 Calling default constructor 
Throwing
	 Calling move constructor
	 Calling copy constructor
Catching!
-------------------------------------------------------------------------------
Example 2: return object reference
-------------------------------------------------------------------------------
Trying
	 Calling default constructor 
Throwing
	 Calling move constructor
Catching!
-------------------------------------------------------------------------------
Example 3: rethrow by reference
-------------------------------------------------------------------------------
Trying (outer)
Trying (inner)
	 Calling default constructor 
Throwing
	 Calling move constructor
Catching!
Re-throwing!
Re-catching!
-------------------------------------------------------------------------------
Example 4: rethrow object
-------------------------------------------------------------------------------
Trying (outer)
Trying (inner)
	 Calling default constructor 
	 Calling move constructor
	 Calling copy constructor
Catching!
	 Calling copy constructor
Re-catching!
-------------------------------------------------------------------------------

from this we draw the following conclusions:

Exception catchers catching objects result in additional copies of thrown
objects:
    see example 1 in main.cc

When throwing objects or references copies of the (referred to) objects are 
thrown
    see example 2 in main.cc

'throw;' does not result in another copy if the object is passed by reference
    see example 3 in main.cc

'throw;' does result in another copy if the object is passed directly
    see example 4 in main.cc

conclusion: do not throw objects. throw references.


