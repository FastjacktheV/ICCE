Summary: When a class allocates memory for its own use, it must define:
    A copy constructor -> done
    An overloaded assignment operator -> done
    A destructor -> done
    a dedicated swap member -> done, nodig bij assignment operator
Dus vanaf hier werkt de class Strings leak-free!!

And optionally:
    a move constructor  -> done
    a move assignment operator -> done

Move kan hier wel toegepast worden. Zie annot. pag. 215:
"Classes not using pointer members pointing to memory controlled by its objects (and not having
base classes doing so, see chapter 13) may also benefit from overloaded members expecting rvalue
references. The class benefits from move operations when one or more of the composed data members
themselves support move operations.
Move operations cannot be implemented if the class type of a composed data member does not sup-
port moving or copying. Currently, stream classes fall into this category."

De class Strings maakt geen gebruik van stream classes als data member, dus move operatorations can be implemented.
Move operations zijn hier logisch, daarom zijn ze ook ge√Ømplementeerd. Immers de class voldoet aan alle voorwaarden die hierboven genoemd zijn. Voordeel van move-awareness is dat er beter omgegaan kan worden met het geheugen. 



Gewijzigd / nieuw:
strings.h
strings5.cc    copy constructor
strings6.cc    move constructor
swapupdated.cc
assignment.cc
destructor.cc

