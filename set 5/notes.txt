Pointers vs Arrays
    Arrays always have the same adressses
    Pointers can change
    Therefore: can assign array to pointer; but not pointer to array
    "name of array is const pointer to first element"
[] is dereferencing operator, just like *
    they dereference what they follow
    a[5] = 0; is the same as *(a+5) = 0; 
        both deref the 5th element of the array
        both are valid for array and pointer a!

Pointer arithmatic
    only add & sub
    pointer arithm respects the type to which one points
    so ++ptr will be increase the adress of the pointer by the size in bytes of the type it points to!

General notes
    postfix operators have higher precendence than prefix operators.

Usefull links
    http://www.fredosaurus.com/notes-cpp/newdelete/50dynamalloc.html

Notes on 36
    Need to write default constructor
    Need to rewrite 
        ..
        ..

Notes on 37
    What is the difference between the two "at" functions?
    What type should the object Filter be?
        I think a class!
        How to implement the function display()?
    Backdoor: I guess a private member funtion called by both 'at' functions 


std::string const str.at(5);
std::string str.at(5)

it is stopping at endline
    Filter takes cin
    Its constructor passes this to String

filtering should happen in display

